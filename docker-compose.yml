version: '3.8'

services:

  redis:
    container_name: redis
    image: redis:alpine
    restart: always
    cpus: '0.5'
    mem_limit: 1000M
    networks:
      - redis
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  portfolio:
    container_name: portfolio
    build: .
    env_file: .env
    restart: on-failure
    cpus: '0.5'
    mem_limit: 750M
    networks:
      - web
      - redis
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portfolio.rule=Host(`amalfitano.me`)"
      - "traefik.http.routers.portfolio.entrypoints=web"
      - "traefik.http.routers.portfolio.middlewares=redirect@file"
      - "traefik.http.routers.portfolio-secured.rule=Host(`amalfitano.me`)"
      - "traefik.http.routers.portfolio-secured.entrypoints=web-secured"
      - "traefik.http.routers.portfolio-secured.tls.certresolver=myhttpchallenge"
      - "traefik.http.services.portfolio.loadbalancer.server.port=80"
    depends_on:
      redis:
        condition: service_healthy

volumes:
  redis-data:

networks:
  redis:
    name: redis_web
    external: False
  web:
    name: infrastructure_web
    external: true
